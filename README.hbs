# Yet Another Logger

## Installation

```
npm install --save yet-another-logger
```

## Usage

Central logger file, lets call `logger.js`


```javascript
const logManager = require('yet-another-logger');

const logglyConfig = {
  token: 'secret-token',
  subdomain: 'subdomain name'
};

global.l = logManager(logglyConfig).loggerFactory({ name: 'app' });
```
Some other file


```javascript

process.env.NODE_ENV = 'test';

const _ = require('lodash');
const chai = require('chai');

const expect = chai.expect;

after(function(done) {
  this.timeout(20 * 1000);
  console.log(l.getWaiting()) // prints number of logs waiting for confirmation from loggly
  l.onAllLogsReceived(done);
});

describe('foo', function() {
  this.timeout(10 * 1000);
  describe('foo.search', function() {
    it('should work', async function() {
      let res;
      try { res = foo.search() } catch(e) { log.error(e); }
      l.info('foo.search', res);
    });
  });
});
```
## Documentation

{{>main}}

## Contributing

### Updating docs
Docs are generated from JSDocs via `npm run docs`
